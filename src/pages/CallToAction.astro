---
import Tokens from "csrf";

export const prerender = false;

const {astroSession: session} = Astro.locals;

const validateForm = (formCsrfToken:string) => {
  const validateToken = formCsrfToken
  const validationSecret = session.csrfSecret;
  const tokens = new Tokens();
  const requestValid = tokens.verify(validationSecret, validateToken);
  if (requestValid) {
    console.log('Form CSRF data is valid');
  } else {
    console.log('Form CSRF data is invalid');
  }
}

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const csrfToken = data.get('csrfToken')?.toString() || ''; 
    const name = data.get("username")?.toString() || '';
    const email = data.get("email")?.toString() || '';
    const password = data.get("password")?.toString() || '';
    console.log('Form data: ', csrfToken, name, email, password);

    validateForm(csrfToken);
    
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}

---

<h2>Astro form with browser client side validation</h2>
<form method="POST">
  <input type="text" name="csrfToken" value={session.csrfToken}  />
  <label>
    Username:
    <input type="text" name="username" required />
  </label>
  <label>
    Email:
    <input type="email" name="email" required />
  </label>
  <label>
    Password:
    <input type="password" name="password" required minlength="6" />
  </label>
  <button>Submit</button>
</form>